% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_change_raster.R
\name{get_change_raster}
\alias{get_change_raster}
\title{Get difference between two rasters}
\usage{
get_change_raster(raster_input, filename, category, return_raster = TRUE)
}
\arguments{
\item{raster_input}{RasterStack or RasterBrick of t1 and t2 timestep.}

\item{filename}{Output file. Full path with .tif extension. If missing, temporary file will be created (file sizes may get large).}

\item{category}{Land cover category to extract.}

\item{return_raster}{Logical. The function stores the raster in the \code{filename} argument path as a side-effect.
If \code{return_raster = TRUE} (default), then the function returns the stored raster.}
}
\value{
Binary raster with 1 values as changes. Only if \code{return_raster = TRUE}. Otherwise, the function side-effect is to save the file locally.
}
\description{
Function will take a RasterStack or RasterBrick object with two layers and return a raster where the cells that have changed
between the two layers have value of 1. If the raster data has temporal aspect,
then the \code{raster_input[[1]]} is \emph{t1 timestep}, while \code{raster_input[[2]]} is \emph{t2 timestep}.
Since the two raster objects should match, the passed variable has to be RasterStack or RasterBrick
(RasterStack will be converted to RasterBrick, therefore it might be more economical to work with RasterBrick as an input here).
Values for the change is observed can be clamped. For example, when applying the function to the ESA CCI LC data,
if you only want to extract changes of agriculture, then \code{category} argument can have values of agricultural classes
(eg. \code{category = 10:40}).
}
\examples{
None yet.
}
